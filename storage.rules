rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function hasTeamAccess() {
      return isAuthenticated();
      // Note: More granular access control is implemented in the application code
    }

    // Project files
    match /projects/{projectId}/{allPaths=**} {
      allow read: if hasTeamAccess();
      allow write: if hasTeamAccess() && 
        request.resource.size < 10 * 1024 * 1024 && // 10MB max file size
        request.resource.contentType.matches('image/.*|application/pdf|text/.*');
    }

    // Invoice attachments
    match /invoices/{invoiceId}/{allPaths=**} {
      allow read: if hasTeamAccess();
      allow write: if hasTeamAccess() && 
        request.resource.size < 10 * 1024 * 1024 && // 10MB max file size
        request.resource.contentType.matches('image/.*|application/pdf|text/.*');
    }

    // User profile pictures
    match /users/{userId}/profile/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && 
        request.resource.size < 5 * 1024 * 1024 && // 5MB max file size
        request.resource.contentType.matches('image/.*');
    }
  }
}
